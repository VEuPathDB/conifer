#!/usr/bin/perl

# read bin files

# first pass, for each query get:
#  - number of bins it is in
#  - count of binmates

use strict;
use Data::Dumper;

my $totalBins;
my $totalQueries;
my $queryInfos;  # hash  queryname -> queryinfo
while(<>) {
  chomp;
  my ($bin, @queriesInBin) = split(/ /);
  $totalBins++;
  $totalQueries += scalar(@queriesInBin);
  my $seenInThisBin;
  foreach my $query (@queriesInBin) {
    $queryInfos->{$query} = {} unless $queryInfos->{$query};
    if (!$seenInThisBin->{$query}) {
      my $queryInfo = $queryInfos->{$query};
      $queryInfo->{name} = $query;
      $queryInfo->{bins}++;
      $queryInfo->{binmates} += scalar(@queriesInBin) - 1;
      $seenInThisBin->{$query} = 1;
    }
  }
}

foreach my $queryName (keys(%$queryInfos)) {
  $queryInfos->{$queryName}->{rate} =
    $queryInfos->{$queryName}->{binmates} /  $queryInfos->{$queryName}->{bins};
}
my $baseline = $totalQueries / $totalBins;

my @sortedQueryNames = sort { $queryInfos->{$b}->{rate} <=> $queryInfos->{$a}->{rate}} keys(%$queryInfos);

 printf("%s\t%s\t%s\t%.2f\n", "total", $totalBins, $totalQueries, $baseline);

foreach my $name (@sortedQueryNames) {
  printf("%s\t%s\t%s\t%.2f\n", $name, $queryInfos->{$name}->{bins}, $queryInfos->{$name}->{binmates}, $queryInfos->{$name}->{rate});
}


