#!/usr/bin/perl

use lib "$ENV{GUS_HOME}/lib/perl";

use FgpUtil::Util::CommandHelper;

use File::Basename;
use File::stat;
use File::Spec;

use Cwd;

my $GUS_HOME = $ENV{GUS_HOME};
my $PROJECT_HOME = $ENV{PROJECT_HOME};
my $CLASSPATH = &FgpUtil::Util::CommandHelper::getJavaClasspath($GUS_HOME);
my $sysProps = &FgpUtil::Util::CommandHelper::getSystemProps($GUS_HOME, 'validateXmlWithRng');

sub main { # takes two+ args: RNG file and any number of XML files
    @args = @_;
    $xmlFile = absolutePath($args[0]);
    shift(@args);
    $argString = "";
    for ($i = 0; $i <= $#args; $i++) {
	$argString .= absolutePath($args[$i])." ";
    }
    $cmd = "java $sysProps -classpath $CLASSPATH org.gusdb.fgputil.xml.XmlValidator $xmlFile $argString";
    my $err = system($cmd);
    return $err >> 8;
}

sub absolutePath {
    $filesDir = $_[0];
    if (!File::Spec->file_name_is_absolute($filesDir)) {
	#printf "Converted relative path to absolute: $filesDir -> ";
        $filesDir = File::Spec->rel2abs($filesDir);
        #printf "$filesDir\n";
    }
    return $filesDir;
}

sub printUsageAndDie { # no arguments
    printf(STDERR "\nUSAGE: validateXmlWithRng <rng_file> <xml_file1> [<xml_file2...]\n\n");
    printf(STDERR "   rng_file: the RNG file against which the XML will be validated\n");
    printf(STDERR "   xml_fileN: XML files to be validated\n\n");
    exit 1;
}

################### Parse args and call main sub ###################

if ($#ARGV < 1) {
    # fewer than 2 args
    printUsageAndDie();
}
if (!(-f $ARGV[0])) {
    printf(STDERR "\nError: RNG file specified does not exist.\n");
    printUsageAndDie();
}

exit(main(@ARGV));
