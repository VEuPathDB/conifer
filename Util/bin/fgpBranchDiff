#!/usr/bin/perl

use lib "$ENV{GUS_HOME}/lib/perl";
use FgpUtil::Util::ProjectBrancher;
use strict;

sub main {
    # parse args, get projects, and print usage if anything incorrect
    my ($group, $branch) = @ARGV;
    usage() unless ($group, $branch);
    my @projects = getProjectGroup($group);
    usage() if (@projects == undef);

    # perform the diffs
    doDiff($branch, @projects);
}

sub usage {
    my $prog = getCmd();
    my $groupOptions = getProjectGroupOptions();
    print STDERR "
For each project in the passed project group, diffs the specified branch version of that project against trunk.

usage: $prog $groupOptions <branch_name>

Compares the following projects based on group name:

";
    printProjectGroupInfo();
    exit(1);
}

sub doDiff {
    my ($branch, @projects) = @_;
    my $url = getRepoBaseUrl();

    foreach my $project (@projects) {
        my ($name, $repository) = split(/:/, $project);
        my $trunkUrl = "$url/$repository/$name/trunk";
        my $branchUrl = "$url/$repository/$name/branches/$branch";
        my $cmd = "svn diff --old $trunkUrl --new $branchUrl | more";
        print STDERR "####################################################\n";
        print STDERR "Diffing $branch project: $name\n";
        print STDERR "####################################################\n";
        system($cmd);
    }
}

main();

1;
