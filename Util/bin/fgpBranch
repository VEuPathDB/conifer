#!/usr/bin/perl

use lib "$ENV{GUS_HOME}/lib/perl";
use FgpUtil::Util::ProjectBrancher;
use strict;

sub main {
    # parse args, get projects, and print usage if anything incorrect
    my ($group, $branch, $comment, $delete) = @ARGV;
    usage() if ($delete && $delete ne '-delete');
    usage() unless ($group && $branch && $comment);
    my @projects = getProjectGroup($group);
    usage() if (@projects == undef);

    # perform the branch
    branch($branch, $comment, $delete, @projects);
}

sub usage {
    my $prog = getCmd();
    my $groupOptions = getProjectGroupOptions();
    print STDERR "
Branch the projects in the passed project group using a single branch name.  Operates directly in svn, not your local dirs.

usage: $prog $groupOptions <branch_name> <comment> [-delete]

-delete deletes the branch from all projects.

Branches the following projects based on group name:

";
    printProjectGroupInfo();
    exit(1);
}

sub branch {
    my ($branch, $comment, $delete, @projects) = @_;
    my $url = getRepoBaseUrl();

    # debug
    my $deleteStr = ($delete ? $delete : "");
    print STDERR "branch() called with branch=$branch, comment=$comment, delete=$deleteStr, and projects=\n" . join(',', @projects) . "\n";

    die "Branch and comment arguments required." unless ($branch && $comment);

    if ($delete) {
        print "\nYou are about to DELETE the $branch branch\nType the name of the branch to confirm: ";
        my $confirm = <STDIN>;
        chomp $confirm;
        die "You did not correctly confirm the branch\n" unless $branch eq $confirm;
    }

    foreach my $project (@projects) {
        my ($name, $repository) = split(/:/, $project);
        my $target = "$url/$repository/$name/branches/$branch";
        my $exists = doesBranchExist($target);
        if ($delete) {
            if (!$exists) {
                print STDERR "$name does not exist.  Skipping...\n";
                next;
            }
            my $cmd = "svn delete -m \"deleting branch $name: $comment\" $target";
            print STDERR "deleting $name\n";
            system($cmd) == 0 || die "Failed deleting '$name'\n";
        }
        else {
            if ($exists) {
                print STDERR "$name already branched.  Skipping...\n";
                next;
            }
            my $cmd = "svn cp -m \"creating branch $name: $comment\" $url/$repository/$name/trunk $target";
            print STDERR "Branching $name\n";
            print STDERR "$cmd\n";
            system($cmd) == 0 || print STDERR "Failed branching '$name'\n";
        }
    }
}

sub doesBranchExist {
    my $target = shift;
    my $cmd = "svn ls $target 2>&1 > /dev/null";
    #print STDERR "Checking for branch with: $cmd\n";
    `$cmd`;
    my $err = $? >>8;
    return !$err;
}

main();

1;
